// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BorrowGlp extends ethereum.Event {
  get params(): BorrowGlp__Params {
    return new BorrowGlp__Params(this);
  }
}

export class BorrowGlp__Params {
  _event: BorrowGlp;

  constructor(event: BorrowGlp) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BorrowStable extends ethereum.Event {
  get params(): BorrowStable__Params {
    return new BorrowStable__Params(this);
  }
}

export class BorrowStable__Params {
  _event: BorrowStable;

  constructor(event: BorrowStable) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ClaimGlpRewards extends ethereum.Event {
  get params(): ClaimGlpRewards__Params {
    return new ClaimGlpRewards__Params(this);
  }
}

export class ClaimGlpRewards__Params {
  _event: ClaimGlpRewards;

  constructor(event: ClaimGlpRewards) {
    this._event = event;
  }

  get _origin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _rewards(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _leverage(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _glpBalance(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _underlyingGlp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _glpShares(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get _stableDebt(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get _stableShares(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class Deleverage extends ethereum.Event {
  get params(): Deleverage__Params {
    return new Deleverage__Params(this);
  }
}

export class Deleverage__Params {
  _event: Deleverage;

  constructor(event: Deleverage) {
    this._event = event;
  }

  get _glpAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _glpRedeemed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EmergencyWithdraw extends ethereum.Event {
  get params(): EmergencyWithdraw__Params {
    return new EmergencyWithdraw__Params(this);
  }
}

export class EmergencyWithdraw__Params {
  _event: EmergencyWithdraw;

  constructor(event: EmergencyWithdraw) {
    this._event = event;
  }

  get _to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GetUnderlyingGlp extends ethereum.Event {
  get params(): GetUnderlyingGlp__Params {
    return new GetUnderlyingGlp__Params(this);
  }
}

export class GetUnderlyingGlp__Params {
  _event: GetUnderlyingGlp;

  constructor(event: GetUnderlyingGlp) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GovernorUpdated extends ethereum.Event {
  get params(): GovernorUpdated__Params {
    return new GovernorUpdated__Params(this);
  }
}

export class GovernorUpdated__Params {
  _event: GovernorUpdated;

  constructor(event: GovernorUpdated) {
    this._event = event;
  }

  get _oldGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class KeeperAdded extends ethereum.Event {
  get params(): KeeperAdded__Params {
    return new KeeperAdded__Params(this);
  }
}

export class KeeperAdded__Params {
  _event: KeeperAdded;

  constructor(event: KeeperAdded) {
    this._event = event;
  }

  get _newKeeper(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class KeeperRemoved extends ethereum.Event {
  get params(): KeeperRemoved__Params {
    return new KeeperRemoved__Params(this);
  }
}

export class KeeperRemoved__Params {
  _event: KeeperRemoved;

  constructor(event: KeeperRemoved) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Leverage extends ethereum.Event {
  get params(): Leverage__Params {
    return new Leverage__Params(this);
  }
}

export class Leverage__Params {
  _event: Leverage;

  constructor(event: Leverage) {
    this._event = event;
  }

  get _glpDeposited(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _glpMinted(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LeverageDown extends ethereum.Event {
  get params(): LeverageDown__Params {
    return new LeverageDown__Params(this);
  }
}

export class LeverageDown__Params {
  _event: LeverageDown;

  constructor(event: LeverageDown) {
    this._event = event;
  }

  get _stableDebt(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _oldLeverage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _currentLeverage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LeverageUp extends ethereum.Event {
  get params(): LeverageUp__Params {
    return new LeverageUp__Params(this);
  }
}

export class LeverageUp__Params {
  _event: LeverageUp;

  constructor(event: LeverageUp) {
    this._event = event;
  }

  get _stableDebt(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _oldLeverage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _currentLeverage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Liquidate extends ethereum.Event {
  get params(): Liquidate__Params {
    return new Liquidate__Params(this);
  }
}

export class Liquidate__Params {
  _event: Liquidate;

  constructor(event: Liquidate) {
    this._event = event;
  }

  get _stablesReceived(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OperatorAdded extends ethereum.Event {
  get params(): OperatorAdded__Params {
    return new OperatorAdded__Params(this);
  }
}

export class OperatorAdded__Params {
  _event: OperatorAdded;

  constructor(event: OperatorAdded) {
    this._event = event;
  }

  get _newOperator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorRemoved extends ethereum.Event {
  get params(): OperatorRemoved__Params {
    return new OperatorRemoved__Params(this);
  }
}

export class OperatorRemoved__Params {
  _event: OperatorRemoved;

  constructor(event: OperatorRemoved) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Rebalance extends ethereum.Event {
  get params(): Rebalance__Params {
    return new Rebalance__Params(this);
  }
}

export class Rebalance__Params {
  _event: Rebalance;

  constructor(event: Rebalance) {
    this._event = event;
  }

  get _glpDebt(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _currentLeverage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _newLeverage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class RepayGlp extends ethereum.Event {
  get params(): RepayGlp__Params {
    return new RepayGlp__Params(this);
  }
}

export class RepayGlp__Params {
  _event: RepayGlp;

  constructor(event: RepayGlp) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RepayStable extends ethereum.Event {
  get params(): RepayStable__Params {
    return new RepayStable__Params(this);
  }
}

export class RepayStable__Params {
  _event: RepayStable;

  constructor(event: RepayStable) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SetLeverageConfig extends ethereum.Event {
  get params(): SetLeverageConfig__Params {
    return new SetLeverageConfig__Params(this);
  }
}

export class SetLeverageConfig__Params {
  _event: SetLeverageConfig;

  constructor(event: SetLeverageConfig) {
    this._event = event;
  }

  get _target(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _min(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _max(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdateGlpAddress extends ethereum.Event {
  get params(): UpdateGlpAddress__Params {
    return new UpdateGlpAddress__Params(this);
  }
}

export class UpdateGlpAddress__Params {
  _event: UpdateGlpAddress;

  constructor(event: UpdateGlpAddress) {
    this._event = event;
  }

  get _oldGlpAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newGlpAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateStableAddress extends ethereum.Event {
  get params(): UpdateStableAddress__Params {
    return new UpdateStableAddress__Params(this);
  }
}

export class UpdateStableAddress__Params {
  _event: UpdateStableAddress;

  constructor(event: UpdateStableAddress) {
    this._event = event;
  }

  get _oldStableAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newStableAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class JonesGlpLeverageStrategy__leverageConfigResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class JonesGlpLeverageStrategy extends ethereum.SmartContract {
  static bind(address: Address): JonesGlpLeverageStrategy {
    return new JonesGlpLeverageStrategy("JonesGlpLeverageStrategy", address);
  }

  BASIS_POINTS(): BigInt {
    let result = super.call("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_BASIS_POINTS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GLP_DECIMALS(): BigInt {
    let result = super.call("GLP_DECIMALS", "GLP_DECIMALS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_GLP_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("GLP_DECIMALS", "GLP_DECIMALS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  GMX_BASIS(): BigInt {
    let result = super.call("GMX_BASIS", "GMX_BASIS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_GMX_BASIS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("GMX_BASIS", "GMX_BASIS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  GOVERNOR(): Bytes {
    let result = super.call("GOVERNOR", "GOVERNOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GOVERNOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("GOVERNOR", "GOVERNOR():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  KEEPER(): Bytes {
    let result = super.call("KEEPER", "KEEPER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_KEEPER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("KEEPER", "KEEPER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR(): Bytes {
    let result = super.call("OPERATOR", "OPERATOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OPERATOR", "OPERATOR():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PRECISION(): BigInt {
    let result = super.call("PRECISION", "PRECISION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PRECISION", "PRECISION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  USDC_DECIMALS(): BigInt {
    let result = super.call("USDC_DECIMALS", "USDC_DECIMALS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_USDC_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "USDC_DECIMALS",
      "USDC_DECIMALS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyGlpStableSimulation(_stableAmount: BigInt): BigInt {
    let result = super.call(
      "buyGlpStableSimulation",
      "buyGlpStableSimulation(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );

    return result[0].toBigInt();
  }

  try_buyGlpStableSimulation(
    _stableAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyGlpStableSimulation",
      "buyGlpStableSimulation(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGMXCapDifference(): BigInt {
    let result = super.call(
      "getGMXCapDifference",
      "getGMXCapDifference():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getGMXCapDifference(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGMXCapDifference",
      "getGMXCapDifference():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaxLeverage(): BigInt {
    let result = super.call("getMaxLeverage", "getMaxLeverage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMaxLeverage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMaxLeverage",
      "getMaxLeverage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinLeverage(): BigInt {
    let result = super.call("getMinLeverage", "getMinLeverage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMinLeverage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinLeverage",
      "getMinLeverage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRedeemStableGMXIncentive(_stableAmount: BigInt): BigInt {
    let result = super.call(
      "getRedeemStableGMXIncentive",
      "getRedeemStableGMXIncentive(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );

    return result[0].toBigInt();
  }

  try_getRedeemStableGMXIncentive(
    _stableAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRedeemStableGMXIncentive",
      "getRedeemStableGMXIncentive(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRequiredGlpAmount(_stableAmount: BigInt): BigInt {
    let result = super.call(
      "getRequiredGlpAmount",
      "getRequiredGlpAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );

    return result[0].toBigInt();
  }

  try_getRequiredGlpAmount(_stableAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequiredGlpAmount",
      "getRequiredGlpAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_stableAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRequiredStableAmount(_glpAmount: BigInt): BigInt {
    let result = super.call(
      "getRequiredStableAmount",
      "getRequiredStableAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );

    return result[0].toBigInt();
  }

  try_getRequiredStableAmount(_glpAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequiredStableAmount",
      "getRequiredStableAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getStableGlpValue(_glpAmount: BigInt): BigInt {
    let result = super.call(
      "getStableGlpValue",
      "getStableGlpValue(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );

    return result[0].toBigInt();
  }

  try_getStableGlpValue(_glpAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStableGlpValue",
      "getStableGlpValue(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTargetLeverage(): BigInt {
    let result = super.call(
      "getTargetLeverage",
      "getTargetLeverage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTargetLeverage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTargetLeverage",
      "getTargetLeverage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUnderlyingGlp(): BigInt {
    let result = super.call(
      "getUnderlyingGlp",
      "getUnderlyingGlp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getUnderlyingGlp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUnderlyingGlp",
      "getUnderlyingGlp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  glp(): Address {
    let result = super.call("glp", "glp():(address)", []);

    return result[0].toAddress();
  }

  try_glp(): ethereum.CallResult<Address> {
    let result = super.tryCall("glp", "glp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  glpMintIncentive(_glpAmount: BigInt): BigInt {
    let result = super.call(
      "glpMintIncentive",
      "glpMintIncentive(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );

    return result[0].toBigInt();
  }

  try_glpMintIncentive(_glpAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "glpMintIncentive",
      "glpMintIncentive(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  glpRedeemRetention(_glpAmount: BigInt): BigInt {
    let result = super.call(
      "glpRedeemRetention",
      "glpRedeemRetention(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );

    return result[0].toBigInt();
  }

  try_glpRedeemRetention(_glpAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "glpRedeemRetention",
      "glpRedeemRetention(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_glpAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  leverage(): BigInt {
    let result = super.call("leverage", "leverage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_leverage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("leverage", "leverage():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  leverageConfig(): JonesGlpLeverageStrategy__leverageConfigResult {
    let result = super.call(
      "leverageConfig",
      "leverageConfig():(uint256,uint256,uint256)",
      []
    );

    return new JonesGlpLeverageStrategy__leverageConfigResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_leverageConfig(): ethereum.CallResult<
    JonesGlpLeverageStrategy__leverageConfigResult
  > {
    let result = super.tryCall(
      "leverageConfig",
      "leverageConfig():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new JonesGlpLeverageStrategy__leverageConfigResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  onGlpRedeem(_amount: BigInt): BigInt {
    let result = super.call("onGlpRedeem", "onGlpRedeem(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_onGlpRedeem(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "onGlpRedeem",
      "onGlpRedeem(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onStableRedeem(_amount: BigInt, _amountAfterRetention: BigInt): BigInt {
    let result = super.call(
      "onStableRedeem",
      "onStableRedeem(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_amountAfterRetention)
      ]
    );

    return result[0].toBigInt();
  }

  try_onStableRedeem(
    _amount: BigInt,
    _amountAfterRetention: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "onStableRedeem",
      "onStableRedeem(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_amountAfterRetention)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stable(): Address {
    let result = super.call("stable", "stable():(address)", []);

    return result[0].toAddress();
  }

  try_stable(): ethereum.CallResult<Address> {
    let result = super.tryCall("stable", "stable():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stableDebt(): BigInt {
    let result = super.call("stableDebt", "stableDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_stableDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("stableDebt", "stableDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  utilization(): BigInt {
    let result = super.call("utilization", "utilization():(uint256)", []);

    return result[0].toBigInt();
  }

  try_utilization(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("utilization", "utilization():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _stableVault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _glpVault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _distributor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _leverageConfig(): ConstructorCall_leverageConfigStruct {
    return changetype<ConstructorCall_leverageConfigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get _glp(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _stable(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_leverageConfigStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get max(): BigInt {
    return this[2].toBigInt();
  }
}

export class AcceptAccountTransferCall extends ethereum.Call {
  get inputs(): AcceptAccountTransferCall__Inputs {
    return new AcceptAccountTransferCall__Inputs(this);
  }

  get outputs(): AcceptAccountTransferCall__Outputs {
    return new AcceptAccountTransferCall__Outputs(this);
  }
}

export class AcceptAccountTransferCall__Inputs {
  _call: AcceptAccountTransferCall;

  constructor(call: AcceptAccountTransferCall) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gmxRouter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AcceptAccountTransferCall__Outputs {
  _call: AcceptAccountTransferCall;

  constructor(call: AcceptAccountTransferCall) {
    this._call = call;
  }
}

export class AddKeeperCall extends ethereum.Call {
  get inputs(): AddKeeperCall__Inputs {
    return new AddKeeperCall__Inputs(this);
  }

  get outputs(): AddKeeperCall__Outputs {
    return new AddKeeperCall__Outputs(this);
  }
}

export class AddKeeperCall__Inputs {
  _call: AddKeeperCall;

  constructor(call: AddKeeperCall) {
    this._call = call;
  }

  get _newKeeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddKeeperCall__Outputs {
  _call: AddKeeperCall;

  constructor(call: AddKeeperCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get _newOperator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class ClaimGlpRewardsCall extends ethereum.Call {
  get inputs(): ClaimGlpRewardsCall__Inputs {
    return new ClaimGlpRewardsCall__Inputs(this);
  }

  get outputs(): ClaimGlpRewardsCall__Outputs {
    return new ClaimGlpRewardsCall__Outputs(this);
  }
}

export class ClaimGlpRewardsCall__Inputs {
  _call: ClaimGlpRewardsCall;

  constructor(call: ClaimGlpRewardsCall) {
    this._call = call;
  }
}

export class ClaimGlpRewardsCall__Outputs {
  _call: ClaimGlpRewardsCall;

  constructor(call: ClaimGlpRewardsCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class LeverageDownCall extends ethereum.Call {
  get inputs(): LeverageDownCall__Inputs {
    return new LeverageDownCall__Inputs(this);
  }

  get outputs(): LeverageDownCall__Outputs {
    return new LeverageDownCall__Outputs(this);
  }
}

export class LeverageDownCall__Inputs {
  _call: LeverageDownCall;

  constructor(call: LeverageDownCall) {
    this._call = call;
  }

  get _glpAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeverageDownCall__Outputs {
  _call: LeverageDownCall;

  constructor(call: LeverageDownCall) {
    this._call = call;
  }
}

export class LeverageUpCall extends ethereum.Call {
  get inputs(): LeverageUpCall__Inputs {
    return new LeverageUpCall__Inputs(this);
  }

  get outputs(): LeverageUpCall__Outputs {
    return new LeverageUpCall__Outputs(this);
  }
}

export class LeverageUpCall__Inputs {
  _call: LeverageUpCall;

  constructor(call: LeverageUpCall) {
    this._call = call;
  }

  get _stableAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeverageUpCall__Outputs {
  _call: LeverageUpCall;

  constructor(call: LeverageUpCall) {
    this._call = call;
  }
}

export class OnGlpDepositCall extends ethereum.Call {
  get inputs(): OnGlpDepositCall__Inputs {
    return new OnGlpDepositCall__Inputs(this);
  }

  get outputs(): OnGlpDepositCall__Outputs {
    return new OnGlpDepositCall__Outputs(this);
  }
}

export class OnGlpDepositCall__Inputs {
  _call: OnGlpDepositCall;

  constructor(call: OnGlpDepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnGlpDepositCall__Outputs {
  _call: OnGlpDepositCall;

  constructor(call: OnGlpDepositCall) {
    this._call = call;
  }
}

export class OnGlpRedeemCall extends ethereum.Call {
  get inputs(): OnGlpRedeemCall__Inputs {
    return new OnGlpRedeemCall__Inputs(this);
  }

  get outputs(): OnGlpRedeemCall__Outputs {
    return new OnGlpRedeemCall__Outputs(this);
  }
}

export class OnGlpRedeemCall__Inputs {
  _call: OnGlpRedeemCall;

  constructor(call: OnGlpRedeemCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnGlpRedeemCall__Outputs {
  _call: OnGlpRedeemCall;

  constructor(call: OnGlpRedeemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OnStableDepositCall extends ethereum.Call {
  get inputs(): OnStableDepositCall__Inputs {
    return new OnStableDepositCall__Inputs(this);
  }

  get outputs(): OnStableDepositCall__Outputs {
    return new OnStableDepositCall__Outputs(this);
  }
}

export class OnStableDepositCall__Inputs {
  _call: OnStableDepositCall;

  constructor(call: OnStableDepositCall) {
    this._call = call;
  }
}

export class OnStableDepositCall__Outputs {
  _call: OnStableDepositCall;

  constructor(call: OnStableDepositCall) {
    this._call = call;
  }
}

export class OnStableRedeemCall extends ethereum.Call {
  get inputs(): OnStableRedeemCall__Inputs {
    return new OnStableRedeemCall__Inputs(this);
  }

  get outputs(): OnStableRedeemCall__Outputs {
    return new OnStableRedeemCall__Outputs(this);
  }
}

export class OnStableRedeemCall__Inputs {
  _call: OnStableRedeemCall;

  constructor(call: OnStableRedeemCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountAfterRetention(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class OnStableRedeemCall__Outputs {
  _call: OnStableRedeemCall;

  constructor(call: OnStableRedeemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RebalanceCall extends ethereum.Call {
  get inputs(): RebalanceCall__Inputs {
    return new RebalanceCall__Inputs(this);
  }

  get outputs(): RebalanceCall__Outputs {
    return new RebalanceCall__Outputs(this);
  }
}

export class RebalanceCall__Inputs {
  _call: RebalanceCall;

  constructor(call: RebalanceCall) {
    this._call = call;
  }
}

export class RebalanceCall__Outputs {
  _call: RebalanceCall;

  constructor(call: RebalanceCall) {
    this._call = call;
  }
}

export class RemoveKeeperCall extends ethereum.Call {
  get inputs(): RemoveKeeperCall__Inputs {
    return new RemoveKeeperCall__Inputs(this);
  }

  get outputs(): RemoveKeeperCall__Outputs {
    return new RemoveKeeperCall__Outputs(this);
  }
}

export class RemoveKeeperCall__Inputs {
  _call: RemoveKeeperCall;

  constructor(call: RemoveKeeperCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveKeeperCall__Outputs {
  _call: RemoveKeeperCall;

  constructor(call: RemoveKeeperCall) {
    this._call = call;
  }
}

export class RemoveOperatorCall extends ethereum.Call {
  get inputs(): RemoveOperatorCall__Inputs {
    return new RemoveOperatorCall__Inputs(this);
  }

  get outputs(): RemoveOperatorCall__Outputs {
    return new RemoveOperatorCall__Outputs(this);
  }
}

export class RemoveOperatorCall__Inputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorCall__Outputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetGlpAddressCall extends ethereum.Call {
  get inputs(): SetGlpAddressCall__Inputs {
    return new SetGlpAddressCall__Inputs(this);
  }

  get outputs(): SetGlpAddressCall__Outputs {
    return new SetGlpAddressCall__Outputs(this);
  }
}

export class SetGlpAddressCall__Inputs {
  _call: SetGlpAddressCall;

  constructor(call: SetGlpAddressCall) {
    this._call = call;
  }

  get _glp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGlpAddressCall__Outputs {
  _call: SetGlpAddressCall;

  constructor(call: SetGlpAddressCall) {
    this._call = call;
  }
}

export class SetLeverageConfigCall extends ethereum.Call {
  get inputs(): SetLeverageConfigCall__Inputs {
    return new SetLeverageConfigCall__Inputs(this);
  }

  get outputs(): SetLeverageConfigCall__Outputs {
    return new SetLeverageConfigCall__Outputs(this);
  }
}

export class SetLeverageConfigCall__Inputs {
  _call: SetLeverageConfigCall;

  constructor(call: SetLeverageConfigCall) {
    this._call = call;
  }

  get _target(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _min(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _max(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get rebalance_(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class SetLeverageConfigCall__Outputs {
  _call: SetLeverageConfigCall;

  constructor(call: SetLeverageConfigCall) {
    this._call = call;
  }
}

export class SetStableAddressCall extends ethereum.Call {
  get inputs(): SetStableAddressCall__Inputs {
    return new SetStableAddressCall__Inputs(this);
  }

  get outputs(): SetStableAddressCall__Outputs {
    return new SetStableAddressCall__Outputs(this);
  }
}

export class SetStableAddressCall__Inputs {
  _call: SetStableAddressCall;

  constructor(call: SetStableAddressCall) {
    this._call = call;
  }

  get _stable(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStableAddressCall__Outputs {
  _call: SetStableAddressCall;

  constructor(call: SetStableAddressCall) {
    this._call = call;
  }
}

export class TransferAccountCall extends ethereum.Call {
  get inputs(): TransferAccountCall__Inputs {
    return new TransferAccountCall__Inputs(this);
  }

  get outputs(): TransferAccountCall__Outputs {
    return new TransferAccountCall__Outputs(this);
  }
}

export class TransferAccountCall__Inputs {
  _call: TransferAccountCall;

  constructor(call: TransferAccountCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gmxRouter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferAccountCall__Outputs {
  _call: TransferAccountCall;

  constructor(call: TransferAccountCall) {
    this._call = call;
  }
}

export class UnwindCall extends ethereum.Call {
  get inputs(): UnwindCall__Inputs {
    return new UnwindCall__Inputs(this);
  }

  get outputs(): UnwindCall__Outputs {
    return new UnwindCall__Outputs(this);
  }
}

export class UnwindCall__Inputs {
  _call: UnwindCall;

  constructor(call: UnwindCall) {
    this._call = call;
  }
}

export class UnwindCall__Outputs {
  _call: UnwindCall;

  constructor(call: UnwindCall) {
    this._call = call;
  }
}

export class UpdateGovernorCall extends ethereum.Call {
  get inputs(): UpdateGovernorCall__Inputs {
    return new UpdateGovernorCall__Inputs(this);
  }

  get outputs(): UpdateGovernorCall__Outputs {
    return new UpdateGovernorCall__Outputs(this);
  }
}

export class UpdateGovernorCall__Inputs {
  _call: UpdateGovernorCall;

  constructor(call: UpdateGovernorCall) {
    this._call = call;
  }

  get _newGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateGovernorCall__Outputs {
  _call: UpdateGovernorCall;

  constructor(call: UpdateGovernorCall) {
    this._call = call;
  }
}
